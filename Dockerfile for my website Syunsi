Create an Image and Push to my docker hub omeshwar/omjyokan
Create a Dockerfile for my webpage for Syunsi
# Create a Dockerfile to pull an ubuntu latest image and create a base image.

FROM ubuntu:latest
ENV DEBIAN_FRONTEND=noninteractive 
RUN apt-get update && apt-get install apache2 -y && apt-get install apache2-utils -y && apt-get install curl && apt-get clean && rm -rf /var/lib/apt/lists/*
WORKDIR /var/www/html
Copy index.html index.html
ADD database/form.html database/Style.css database/syunsi.mp4 /var/www/html
EXPOSE 80
HEALTHCHECK CMD curl --fail http://localhost:80/ || exit 1
CMD ["apachectl", "-D", "FOREGROUND"]

" This command will pick the configuration from default configuration directories. Also, this “DFOREGROUND” flag ensure apache parent will run in the foreground and not detach
from the shell. One of the main uses of this method is to get apache to log to the console in the foreground. We can see the debug logs in the console itself, no need to tail 
the apache log files. Also, when you run  apache/httpd server on Docker, using “docker exec” or  “docker cmd” , it is necessary to start httpd/apache in foreground.
If you run it as daemon  Docker will exit thinking the job has finished.
Update the Image with StyleSheet.css, home.jpg, logo.jpg, form.html, Style.css for form and video by using ADD to create a webpage. 
Healthcheck: curl command makes a HTTP request inside the container, which checks that the web app in the container does respond. Now, http://localhost || exit 1 means if 
http://localhost succeeds i.e. exit code 0 or Docker Healthy else exit code 1 which means the Docker the container is unhealthy so exit the process.
e.g. cmd1 || cmd2 What happens is that if cmd1 succeeds (i.e. exit code 0), then cmd2 will NOT be performed. cmd2 will only be performed if cmd1 fails. "

docker build -t webserver .  # Create a Custom Ubuntu Image from Ubuntu

docker run -dit -p 8080:80 webserver # Craete a docker conatiner with health check and access apache at localhost:8080

#Push the Image to the Docker Hub
#Logout from the Docker Hub 
# Login to Docker Hub omeshwar whiuch will ask for password
docker login -u omeshwar 
# Create a tag for image webserver:latest in our repo REPONAME:tag
docker tag webserver:latest omeshwar/omjyokan:webserver-v1
docker push omeshwar/omjyokan:webserver-v1


