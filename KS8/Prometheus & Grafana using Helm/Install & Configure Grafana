Search Grafana Repos:
$ helm search repo grafana
NAME                                            CHART VERSION   APP VERSION     DESCRIPTION
stable/grafana                                  5.5.7           7.1.1           DEPRECATED - The leading tool for querying and ...
prometheus-community/kube-prometheus-stack      18.0.12         0.50.0          kube-prometheus-stack collects Kubernetes manif...
prometheus-community/prometheus-druid-exporter  0.11.0          v0.8.0          Druid exporter to monitor druid metrics with Pr...
Add more repos: 
$ helm repo add grafana https://grafana.github.io/helm-charts
$ helm search repo grafana
NAME                                            CHART VERSION   APP VERSION     DESCRIPTION
grafana/grafana                                 6.16.7          8.1.4           The leading tool for querying and visualizing t...
stable/grafana                                  5.5.7           7.1.1           DEPRECATED - The leading tool for querying and ...
grafana/enterprise-logs                         1.1.1           v1.1.0          Grafana Enterprise Logs
grafana/enterprise-metrics                      1.5.3           v1.5.0          Grafana Enterprise Metrics
grafana/fluent-bit                              2.3.0           v2.1.0          Uses fluent-bit Loki go plugin for gathering lo...
grafana/loki                                    2.6.0           v2.3.0          Loki: like Prometheus, but for logs.
grafana/loki-canary                             0.4.0           2.3.0           Helm chart for Grafana Loki Canary
grafana/loki-distributed                        0.37.3          2.3.0           Helm chart for Grafana Loki in microservices mode
grafana/loki-stack                              2.4.1           v2.1.0          Loki: like Prometheus, but for logs.
grafana/promtail                                3.8.1           2.3.0           Promtail is an agent which ships the contents o...
grafana/tempo                                   0.7.7           1.1.0           Grafana Tempo Single Binary Mode
grafana/tempo-distributed                       0.9.14          1.1.0           Grafana Tempo in MicroService mode
grafana/tempo-vulture                           0.1.0           0.7.0           Grafana Tempo Vulture - A tool to monitor Tempo...
prometheus-community/kube-prometheus-stack      18.0.12         0.50.0          kube-prometheus-stack collects Kubernetes manif...
prometheus-community/prometheus-druid-exporter  0.11.0          v0.8.0          Druid exporter to monitor druid metrics with Pr...

We will use repo "grafana/grafana" by editing its values.yaml file which is the source of the configuration.
$ helm inspect values grafana/grafana > test/grafana.values
$ vi test/grafana.values

Edit the Service type for Grafana by searching type-
## Expose the grafana service to be accessed from outside the cluster (LoadBalancer service).
## or access it from within the cluster (ClusterIP service). Set the service type and the port to serve it.
## ref: http://kubernetes.io/docs/user-guide/services/
##
service:
  enabled: true
  type: ClusterIP
  port: 80
  targetPort: 3000
    # targetPort: 4181 To be used with a proxy extraContainer
  annotations: {}
  labels: {}
  portName: service

Repace it with: (In prometheus the services were opened on a diffrent port because i used caps "N" NodePort: 32323 rather than nopePort: 32323 while type should be "N")
  {
    type: NodePort
    nodePort: 32500
  }
  
  Search for /admin and set the admin paswoerd by uncommencing and setting a password
  # Administrator credentials when not using an existing secret (see below)
    adminUser: admin
    #adminPassword: strongpassword

Replace persisten-Volume from true to false.

$ helm install my-grafan grafana/grafana --values test/grafana.values  (it can be grafana.txt or abc.txt)

$ helm list
NAME            NAMESPACE       REVISION        UPDATED                                 STATUS          CHART                   APP VERSION
my-grafan       default         1               2021-09-22 14:18:06.668812344 +0000 UTC deployed        grafana-6.16.7          8.1.4
petclinic-app   default         1               2021-09-20 16:20:51.325928071 +0000 UTC deployed        petclinic-0.1.0         1.0
prometheus      default         1               2021-09-22 11:27:43.189991899 +0000 UTC deployed        prometheus-14.7.1       2.26.0


Login to Cluster:
$ kubectl get svc
NAME                            TYPE           CLUSTER-IP       EXTERNAL-IP   PORT(S)          AGE
kubernetes                      ClusterIP      10.96.0.1        <none>        443/TCP          19d
my-grafan-grafana               NodePort       10.105.254.39    <none>        80:32500/TCP     14m
petclinic-service               LoadBalancer   10.97.111.141    <pending>     8080:32750/TCP   46h
prometheus-alertmanager         ClusterIP      10.105.121.16    <none>        80/TCP           3h5m
prometheus-kube-state-metrics   ClusterIP      10.96.242.163    <none>        8080/TCP         3h5m
prometheus-node-exporter        ClusterIP      None             <none>        9100/TCP         3h5m
prometheus-pushgateway          ClusterIP      10.106.211.214   <none>        9091/TCP         3h5m
prometheus-server               NodePort       10.98.46.182     <none>        80:30835/TCP     3h5m

Browse the grafana dashborad: http://<Public-IP of Node>:32500
user: admin and password: as set

Grafana Dashboard: 
Add your data source:
Add Prometheus with the url http://<server ip>:port e.g. http://3.85.233.168:30835 and not http://3.85.233.168:30835/ as / is generating error.
Save it with a name and status will change as complete
Add a dashborad: Either create a custom dashboard or import from the Kubernetes-Grafana dashboards.
Import a Dashborad:
Select an appropriate dashboard over the google and down the json file
Click on + and Import then upload the json file using the option Upload JSON File , select the prometheus as datasourec and save the dashboard.





