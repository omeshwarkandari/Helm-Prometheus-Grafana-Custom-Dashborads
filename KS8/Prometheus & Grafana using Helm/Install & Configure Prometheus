Customized Prometheus is installed using Helm Repository

1. Add the Heelm repo as suggested by the Helm Community "https://github.com/prometheus-community/helm-charts/tree/main/charts/kube-prometheus-stack#kube-prometheus-stack"
$ helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
$ helm repo add kube-state-metrics https://kubernetes.github.io/kube-state-metrics
helm repo update

$ helm repo update
( Also we can get the available repo for prometheus by the cmd- $ helm search repo prometheus )
2. View the repos:
$ helm repo list --=> It show all repositories

3. Search the repo contents to identify exact repo: "helm search repo <Repo NAME>"
e.g. $ helm search repo prometheus-community
NAME                                                    CHART VERSION   APP VERSION     DESCRIPTION
prometheus-community/alertmanager                       0.12.2          v0.22.1         The Alertmanager handles alerts sent by client ...
prometheus-community/kube-prometheus-stack              18.0.12         0.50.0          kube-prometheus-stack collects Kubernetes manif...
prometheus-community/kube-state-metrics                 3.5.1           2.2.0           Install kube-state-metrics to generate and expo...
prometheus-community/prometheus                         14.7.1          2.26.0          Prometheus is a monitoring system and time seri...
prometheus-community/prometheus-adapter                 2.17.0          v0.9.0          A Helm chart for k8s prometheus adapter
prometheus-community/prometheus-blackbox-exporter       5.0.3           0.19.0          Prometheus Blackbox Exporter
prometheus-community/prometheus-cloudwatch-expo...      0.16.0          0.10.0          A Helm chart for prometheus cloudwatch-exporter
prometheus-community/prometheus-consul-exporter         0.4.0           0.4.0           A Helm chart for the Prometheus Consul Exporter
prometheus-community/prometheus-couchdb-exporter        0.2.0           1.0             A Helm chart to export the metrics from couchdb...
prometheus-community/prometheus-druid-exporter          0.11.0          v0.8.0          Druid exporter to monitor druid metrics with Pr...
prometheus-community/prometheus-elasticsearch-e...      4.6.1           1.2.1           Elasticsearch stats exporter for Prometheus
prometheus-community/prometheus-kafka-exporter          1.5.0           v1.4.1          A Helm chart to export the metrics from Kafka i...
prometheus-community/prometheus-mongodb-exporter        2.8.1           v0.10.0         A Prometheus exporter for MongoDB metrics
prometheus-community/prometheus-mysql-exporter          1.2.2           v0.12.1         A Helm chart for prometheus mysql exporter with...
prometheus-community/prometheus-nats-exporter           2.8.0           0.8.0           A Helm chart for prometheus-nats-exporter
prometheus-community/prometheus-node-exporter           2.1.0           1.2.2           A Helm chart for prometheus node-exporter
prometheus-community/prometheus-operator                9.3.2           0.38.1          DEPRECATED - This chart will be renamed. See ht...
prometheus-community/prometheus-pingdom-exporter        2.4.1           20190610-1      A Helm chart for Prometheus Pingdom Exporter
prometheus-community/prometheus-postgres-exporter       2.3.6           0.10.0          A Helm chart for prometheus postgres-exporter
prometheus-community/prometheus-pushgateway             1.11.0          1.3.0           A Helm chart for prometheus pushgateway
prometheus-community/prometheus-rabbitmq-exporter       1.0.0           v0.29.0         Rabbitmq metrics exporter for prometheus
prometheus-community/prometheus-redis-exporter          4.6.0           1.27.0          Prometheus exporter for Redis metrics
prometheus-community/prometheus-snmp-exporter           0.1.4           0.19.0          Prometheus SNMP Exporter
prometheus-community/prometheus-stackdriver-exp...      1.10.0          0.11.0          Stackdriver exporter for Prometheus
prometheus-community/prometheus-statsd-exporter         0.4.0           0.22.1          A Helm chart for prometheus stats-exporter
prometheus-community/prometheus-to-sd                   0.4.0           0.5.2           Scrape metrics stored in prometheus format and ..

We will use "prometheus-community/prometheus" to install the prometheus server and before installing it can be customized.
Install Prometheus in the default ns-
$ helm install <release-name> prometheus-community/prometheus 
or Install in seperate namespace e.g. monitor-
$ helm install prometheus prometheus-community/prometheus -n monitor

Customize the Prometheus Instalallation by changing the values.yaml file:

 - All the services Type:ClusterIP (This means we can not access the prometheus metrics from oustide as it will be accessible only on the "localhost:9090"
 - Prometheus-Server might not intialize as default config is using Permanet Volume Mounts which are not configured for our Demo Cluster rather we are suing EmptyDir.
$ mkdir test (Craete a directory and ensure the logi user has owner permission)

$ helm inspect values prometheus-community/prometheus > test/prometheus.values (Copy the values of prometheus default configuartion to a file prometheus.values)
Edit the configuration inside the "prometheus.values"
$ vi test/prometheus.values

Search type by /type and n to scroll to fine the Promotheus Server Service configuration
## List of IP addresses at which the Prometheus server service is available
## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips
## List of IP addresses at which the Prometheus server service is available
## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips
    externalIPs: []
    loadBalancerIP: ""
    loadBalancerSourceRanges: []
    servicePort: 80
    sessionAffinity: None
    type: ClusterIP
Change the type to NodePort with an unused port number from 30000-32767
    type: NodePort
    nodePort: 32500
(Note: type: NodePort with Both "N & P" in caps while nect line nodePort with "n" small/ "P" caps otherwise actual port migth not be 32500 but a random selecetion.
 Search the PersistentVolume and if enable: true then make it false so that prometheus do not search for PV rather use default Emptydir voulme mount.
  persistentVolume:
    ## If true, pushgateway will create/use a Persistent Volume Claim
    ##
    enabled: false

 Save the configuration and install helm using the new values.
 $ helm install <release-name> <repo-name> --values <new values file> --namespace <desired namespace> 
Lets use rlaese-name as prometheus and namespace monitor:
 $ kubectl create ns monitor
 
 $ helm install prometheus prometheus-community/prometheus -f test/prometheus.values -n monitor   --->
{
NAME: prometheus
LAST DEPLOYED: Fri Sep 24 04:59:10 2021
NAMESPACE: monitor
STATUS: deployed
REVISION: 1
TEST SUITE: None
NOTES:
The Prometheus server can be accessed via port 80 on the following DNS name from within your cluster:
prometheus-server.monitor.svc.cluster.local
Get the Prometheus server URL by running these commands in the same shell:
  export NODE_PORT=$(kubectl get --namespace monitor -o jsonpath="{.spec.ports[0].nodePort}" services prometheus-server)
  export NODE_IP=$(kubectl get nodes --namespace monitor -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
#################################################################################
######   WARNING: Persistence is disabled!!! You will lose your data when   #####
######            the Server pod is terminated.                             #####
#################################################################################
The Prometheus alertmanager can be accessed via port 80 on the following DNS name from within your cluster:
prometheus-alertmanager.monitor.svc.cluster.local
Get the Alertmanager URL by running these commands in the same shell:
  export POD_NAME=$(kubectl get pods --namespace monitor -l "app=prometheus,component=alertmanager" -o jsonpath="{.items[0].metadata.name}")
  kubectl --namespace monitor port-forward $POD_NAME 9093
#################################################################################
######   WARNING: Persistence is disabled!!! You will lose your data when   #####
######            the AlertManager pod is terminated.                       #####
#################################################################################
#################################################################################
######   WARNING: Pod Security Policy has been moved to a global property.  #####
######            use .Values.podSecurityPolicy.enabled with pod-based      #####
######            annotations                                               #####
######            (e.g. .Values.nodeExporter.podSecurityPolicy.annotations) #####
#################################################################################
The Prometheus PushGateway can be accessed via port 9091 on the following DNS name from within your cluster:
prometheus-pushgateway.monitor.svc.cluster.local
Get the PushGateway URL by running these commands in the same shell:
  export POD_NAME=$(kubectl get pods --namespace monitor -l "app=prometheus,component=pushgateway" -o jsonpath="{.items[0].metadata.name}")
  kubectl --namespace monitor port-forward $POD_NAME 9091
For more information on running Prometheus, visit:https://prometheus.io/
}
 
 
Now Go to the Kubernetes Master Server:
$ kubectl get all -n monitor
NAME                                                 READY   STATUS    RESTARTS   AGE
pod/prometheus-alertmanager-7775966c-4kmpd           2/2     Running   0          5m52s
pod/prometheus-kube-state-metrics-76f66976cb-vd2rb   1/1     Running   0          5m52s
pod/prometheus-node-exporter-gknp8                   1/1     Running   0          5m52s
pod/prometheus-node-exporter-n7rwm                   1/1     Running   0          5m52s
pod/prometheus-pushgateway-646ffc789f-fshrp          1/1     Running   0          5m52s
pod/prometheus-server-57cc5ffc74-688jq               2/2     Running   0          5m52s

NAME                                    TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)        AGE
service/prometheus-alertmanager         ClusterIP   10.99.199.62    <none>        80/TCP         5m52s
service/prometheus-kube-state-metrics   ClusterIP   10.102.86.124   <none>        8080/TCP       5m52s
service/prometheus-node-exporter        ClusterIP   None            <none>        9100/TCP       5m52s
service/prometheus-pushgateway          ClusterIP   10.108.102.30   <none>        9091/TCP       5m52s
service/prometheus-server               NodePort    10.103.206.60   <none>        80:32500/TCP   5m52s

NAME                                      DESIRED   CURRENT   READY   UP-TO-DATE   AVAILABLE   NODE SELECTOR   AGE
daemonset.apps/prometheus-node-exporter   2         2         2       2            2           <none>          5m52s

NAME                                            READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/prometheus-alertmanager         1/1     1            1           5m52s
deployment.apps/prometheus-kube-state-metrics   1/1     1            1           5m52s
deployment.apps/prometheus-pushgateway          1/1     1            1           5m52s
deployment.apps/prometheus-server               1/1     1            1           5m52s

NAME                                                       DESIRED   CURRENT   READY   AGE
replicaset.apps/prometheus-alertmanager-7775966c           1         1         1       5m52s
replicaset.apps/prometheus-kube-state-metrics-76f66976cb   1         1         1       5m52s
replicaset.apps/prometheus-pushgateway-646ffc789f          1         1         1       5m52s
replicaset.apps/prometheus-server-57cc5ffc74               1         1         1       5m52s

-bash-4.2$ helm ls -A   ---> This will display all the deploed namespaces.
NAME            NAMESPACE       REVISION        UPDATED                                 STATUS          CHART                   APP VERSION
petclinic-app   default         1               2021-09-20 16:20:51.325928071 +0000 UTC deployed        petclinic-0.1.0         1.0
prometheus      monitor         1               2021-09-24 04:59:10.206655178 +0000 UTC deployed        prometheus-14.7.1       2.26.0


Check the Prometheus by accessing it over the browser: http://"Public-IP of the Node hosting Prom-server Port":NodePort
e.g  in this case :  http://18.212.53.205:32500/


Prometheus: The most favoured monitoring tool for the Kubernets Cluster because it has the capability to scrap, store, export & visualize the metrics for a dynamic envioronment.
As we know Kubernetes unlike the other infrastructure is dynamic in nature where the most critical assets/artifacts PODS keep changing dynamically so its not posssible for the 
legacy monitoring tools to monitor these resources because these tools scrap and share metrics based on the static configuration like IP Addresses.

Components used by Prometheus in the Metric Srapping Process:
1. Prometheus server: It is the main engine 
2. Node Exporter: It is a Prometheus exporter for server level and OS level metrics like CPU, Memory and Disk utilization. Kind:ds ensures a node exported pod in each Node.
3. Push Gateway: It is used to allow external, ephemeral and batch jobs to expose their metrics to Prometheus which can not be scrapped internally.
4. Alert Manager: It helps send alert to multiple ways email/sms/Tickting tool in a real time to take a necessary action to ensure business continuity.
5. Dashboard: There are many way metrics can be visualize like Prometheus Dashborad/ Grafana but the most versatile is the Grafana Dashboard.




