{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": " Template to launch two Webserver in Private Subnet using AMI with Load Balancer in Public Subnet in My Custom VPC",
    
    "Parameters" : {
        "KeyName" : {
            "Description" : "Name of the existing Key Pair to access EC2 Instance",
                "Type" : "AWS::EC2::KeyPair::KeyName",
                "Default" : "Sample",
                "MinLength" : "1",
                "MaxLength" : "64",
                "AllowedPattern" : "[-_ a-zA-Z0-9]*",
                "ConstraintDescription" : "can contain only alphanumeric characters, spaces, dashes and underscores."
        },
        "AvailabilityZone1":{  
          "Description":"The first availability zones where the resources will be initiated",
          "Type":"AWS::EC2::AvailabilityZone::Name",
          "ConstraintDescription":"Must be a valid availability zones. Ex: ap-southeast-2a"
        },
        "AvailabilityZone2":{  
          "Description":"The first availability zones where the resources will be initiated",
          "Type":"AWS::EC2::AvailabilityZone::Name",
          "ConstraintDescription":"Must be a valid availability zones. Ex: ap-southeast-2a"
        }
    },    
      
    "Resources": {
        "VPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": "10.50.0.0/16",
                "EnableDnsSupport": "true",
                "EnableDnsHostnames": "true",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Custom_VPC"
                    }
                ]
            }
        },
        "PublicSubnet1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": { "Ref": "VPC" },                       
                "CidrBlock": "10.50.1.0/24",
                "AvailabilityZone":{  
                  "Ref":"AvailabilityZone1"
                },
                "Tags": [
                    {
                        "Key"   : "Name",
                        "Value" : "Public1"
                    }
                ]
            }
        },
        "PublicSubnet2": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": { "Ref": "VPC" },                       
                "CidrBlock": "10.50.2.0/24",
                "AvailabilityZone":{  
                  "Ref":"AvailabilityZone2"
                },
                "Tags": [
                    {
                        "Key"   : "Name",
                        "Value" : "Public2"
                    }
                ]
            }
        },
        "InternetGateway": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
                "Tags": [
                    {
                        "Key"   : "Name",
                        "Value" : "Custom_IneternetGateway"
                    }
                ]
            }
        },
        "VPCGatewayAttachment": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "VpcId": { "Ref": "VPC" },
                "InternetGatewayId": { "Ref": "InternetGateway" }
            }
        },
        "PublicRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {  "Ref": "VPC"    },                  
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Public"
                    }
                ]
            }
        },
        "PublicRoute": {
            "Type": "AWS::EC2::Route",
            "DependsOn": "VPCGatewayAttachment",
            "Properties": {
                "RouteTableId": {   "Ref": "PublicRouteTable"   },                
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {  "Ref": "InternetGateway"    }             
            }
        },
        "PublicSubnetRouteTableAssociation1": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": { "Ref": "PublicSubnet1" },                                                 
                "RouteTableId": { "Ref": "PublicRouteTable" }
            }
        },
        "PublicSubnetRouteTableAssociation2": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": { "Ref": "PublicSubnet2" },                                                 
                "RouteTableId": { "Ref": "PublicRouteTable" }
            }
        },

        "PrivateSubnet1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": { "Ref": "VPC" },
                "CidrBlock": "10.50.3.0/24",
                "AvailabilityZone":{  
                  "Ref":"AvailabilityZone1"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Private1"
                    }
                ]
            }
        },
        "PrivateSubnet2": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": { "Ref": "VPC" },
                "CidrBlock": "10.50.4.0/24",
                "AvailabilityZone":{  
                  "Ref":"AvailabilityZone2"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Private2"
                    }
                ]
            }
        },
        "NAT": {
            "Type": "AWS::EC2::NatGateway",
            "Properties": {
                "AllocationId": {
                    "Fn::GetAtt": [
                        "EIP",
                        "AllocationId"
                    ]
                },
                "SubnetId": {
                    "Ref": "PublicSubnet1" 
                },
                    
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Custom_NAT"
                    }
                ]
            }
        },        
        "EIP": {
            "Type": "AWS::EC2::EIP",
            "DependsOn": "VPCGatewayAttachment",
            "Properties": {
                "Domain": "VPC"
            }
        },
        "PrivateRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": { "Ref": "VPC" },                    
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Private"
                    }
                ]
            }
        },
        "PrivateRoute": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "RouteTableId": { "Ref": "PrivateRouteTable" },                    
                "DestinationCidrBlock": "0.0.0.0/0",
                "NatGatewayId": { "Ref": "NAT" }                    
            }
        },
        "PrivateSubnetRouteTableAssociation1": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": { "Ref": "PrivateSubnet1" },                                   
                "RouteTableId": { "Ref": "PrivateRouteTable" }                    
            }          
        },
        "PrivateSubnetRouteTableAssociation2": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": { "Ref": "PrivateSubnet2" },                                   
                "RouteTableId": { "Ref": "PrivateRouteTable" }                    
            }       
        },
        "PublicSecurityGroup" : {
          "Type" : "AWS::EC2::SecurityGroup",
          "Properties" : {
            "GroupDescription" : "Internet facing LoadBalancer SecurityGroup",
            "VpcId"    : { "Ref" : "VPC" }, 
            "SecurityGroupIngress" : [
              {"IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIp" : "0.0.0.0/0"}
            ],
            "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Public_SG"
                    }
                ]
          }
        },
        "LoadBalancer" : {
            "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
            "Properties": {
                "Subnets": [ 
                    { 
                        "Ref": "PublicSubnet1"
                    },
                    { 
                        "Ref": "PublicSubnet2" 
                    }
                ],
                "Type" : "application",
                "IpAddressType" : "ipv4",
                "SecurityGroups" : [
                    { "Ref" : "PublicSecurityGroup"}
                ]
            }
        },
        "TargetGroup" : {
            "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",             
            "DependsOn" : ["WebServer1","WebServer2"],
            "Properties": {
                "Name" : "MyTargets",
                "Port": "80",
                "Protocol": "HTTP",
                "TargetType" : "instance",
                "Targets": [
                    {
                        "Id": {
                            "Ref": "WebServer1"
                        },
                        "Port": "80"
                    },
                    {
                        "Id": {
                            "Ref": "WebServer2"
                        },
                        "Port": "80"
                    }
                ],
                "TargetGroupAttributes" : [
                    {
                        "Key" : "deregistration_delay.timeout_seconds",
                        "Value" : "60"
                    }                    
                ],
                "VpcId" : {
                    "Ref" : "VPC"
                }
            }
        },
    
        "Listener": {
            "Type": "AWS::ElasticLoadBalancingV2::Listener",
            "Properties": {
                "DefaultActions": [
                    {
                        "Type": "forward",
                        "TargetGroupArn": {
                            "Ref": "TargetGroup"
                        }
                    }
                ],
                "LoadBalancerArn": {
                    "Ref": "LoadBalancer"
                },
                "Port": "80",
                "Protocol": "HTTP"
            }
        },
        "PrivateSecurityGroup" : {
                "Type" : "AWS::EC2::SecurityGroup",
                "Properties" : {
                    "GroupDescription" : "Enable HTTP ingress port22 + SSH port 22",
                    "VpcId"    : { "Ref" : "VPC" }, 
                    "SecurityGroupIngress" : [
                      {"IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIp" : "10.50.0.0/16"},
                      {"IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : "10.50.0.0/16"}
                    ],
                    "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Private_SG"
                    }
                ]
                }
        },
        "WebServer1" : {
            "Type": "AWS::EC2::Instance",
            "Properties" : {
                "ImageId" : "ami-0ad854f9dabbd2231",
                "InstanceType" : "t2.micro",
                "SubnetId" : { "Ref" : "PrivateSubnet1" },
                "SecurityGroupIds": [
                       {
                            "Fn::GetAtt": [
                                "PrivateSecurityGroup",
                                "GroupId"
                            ]
                        }
                ],      
                "Tags": [ { "Key": "Name", "Value": "Server1" } ]
            }            
        },
        "WebServer2" : {
            "Type": "AWS::EC2::Instance",
            "Properties" : {
                "ImageId" : "ami-0ad854f9dabbd2231",
                "InstanceType" : "t2.micro",
                "SubnetId" : { "Ref" : "PrivateSubnet2" },
                "SecurityGroupIds": [
                       {
                            "Fn::GetAtt": [
                                "PrivateSecurityGroup",
                                "GroupId"
                            ]
                        }
                ],        
                "Tags": [ { "Key": "Name", "Value": "Server2" } ]
            }            
        }     
    }
}